<PRIOR>
: connect by절에 사용되며, 현재 읽은 칼럼을 지정한다.
: prior 자식=부모 형태를 사용하면 계층구조에서 부모데이터에서 자식데이터 방향으로
전개하는 순방향 전개를 한다.(부모->자식)
: prior 부모=자식 형태를 사용하면 반대로 자식 데이터에서 부모 데이터방향으로
전개하는 역방향 전개를 한다. (자식->부모)


<ORDER SIBLINGS BY>
: 형제 노드(동일 LEVEL) 사이에서 정렬을 수행한다.


<계층형 질의>
: 계층형 데이터란 동일 테이블에 계층적으로 상위와 하위 데이터가 포함된 데이터를 말한다. 
예를 들어, 사원 테이블에서는 사원들 사이에 상위 사원(관리자)과 하위 사원 관계가 존재하고
조직 테이블에서는 조직들 사이에 상위 조직과 하위 조직 관계가 존재한다.


<셀프 조인(Self Join)>
: 동일 테이블 사이의 조인.
따라서 FROM 절에 동일 테이블이 두 번 이상 나타난다.
동일 테이블 사이의 조인을 수행하면 테이블과 칼럼 이름이 모두 동일하기 때문에
식별을 위해 반드시 테이블 별칭(Alias)를 사용해야 한다.


<서브쿼리 종류>
1. Single Row 서브쿼리 (단일 행 서브쿼리)
: 서브쿼리의 실행 결과가 항상 1건 이하인 서브쿼리
: 단일 행 비교 연산자 =, <, <=, >, >=, <> 와 함께 사용된다.

2. Multi Row 서브쿼리 (다중 행 서브쿼리)
: 서브쿼리의 실행 결과가 여러 건인 서브쿼리를 의미한다.
: 다중 행 비교 연산자 IN, ALL, ANY, SOME, EXISTS와 함께 사용된다.

3. Multi Column 서브쿼리 (다중 칼럼 서브쿼리) => SQL Server에서는 현재 지원하지 않는다.
: 서브쿼리의 실행 결과로 여러 칼럼을 반환한다.
: 메인쿼리의 조건절에 여러 칼럼을 동시에 비교할 수 있다.
: 서브쿼리와 메인쿼리에서 비교하고자 하는 칼럼 개수와 칼럼의 위치가 동일해야 한다.